# {{ ansible_managed }}
server {
  # basic configs
  {% if item.value.ssl|default(false) is sameas true -%}
  {% if item.value.ipv4|default(true) is sameas true -%}
  listen 443 ssl;
  {% endif -%}
  {% if item.value.ipv6|default(false) is sameas true and item.value.ipv4|default(true) is sameas true-%}
  listen [::]:443 ssl;
  {% elif item.value.ipv6|default(false) is sameas true and item.value.ipv4|default(true) is sameas false -%}
  listen [::]:443 ssl ipv6only=on;
  {% endif -%}
  {% else -%}
  listen 80;
  {% if item.value.ipv6|default(false) is sameas true -%}
  listen [::]:80;
  {% endif -%}
  {% endif -%}

  server_name {{ item.value.domains | join(" ") }};

  {% if item.charset is defined-%}
  charset {{ item.charset }};
  {% endif -%}

  {% if item.value.ssl|default(false) is sameas true -%}
  # SSL Certs
  ssl_certificate       {{ item.value.certificate.pub }};
  ssl_certificate_key   {{ item.value.certificate.key }};

  # SSL Hardening
  ssl_protocols               {{ item.value.protocols|default('TLSv1.3') }};
  ssl_prefer_server_ciphers   on;
  ssl_ciphers                 {{ item.value.ciphers|default('EECDH+CHACHA20:EECDH+AESGCM:EDH+AESGCM') }};
  ssl_conf_command            Ciphersuites  TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256;
  ssl_conf_command            Options       PrioritizeChaCha;
  ssl_ecdh_curve              secp384r1;
  ssl_session_timeout         10m;
  ssl_session_cache           shared:SSL:10m;
  ssl_session_tickets         off;
  ssl_stapling                on;
  ssl_stapling_verify         on;
  {% endif -%}

  # Hardening
  add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;
  add_header X-Frame-Options DENY;
  add_header X-XSS-Protection "1; mode=block";

  # Client Settings
  client_max_body_size    {{ item.value.client.max_body_size|default('1M') }};
  client_body_timeout     {{ item.value.client.body_timeout|default('60s') }};

  {% if item.value.fastcgi is defined -%}
  # Fastcgi
  fastcgi_buffers         {{ item.value.fastcgi.buffer.number|default('8') }} {{ item.value.fastcgi.buffer.size|default('4K') }};
  {% if item.value.fastcgi.hide_header -%}
  {% for field in item.value.fastcgi.hide_header|default([]) -%}
  fastcgi_hide_header     {{ field }};
  {% endfor -%}
  {% endif -%}
  {% endif -%}

  {% if item.value.proxy is defined -%}
  location / {
    # Proxy Settings
    proxy_pass            http://localhost:{{ item.value.proxy.port }}/;
    proxy_http_version    {{ item.value.proxy.version|default('1.1') }};
    {% if item.value.proxy.default_header|default(true) is sameas true -%}
    proxy_set_header      Upgrade             $http_upgrade;
    proxy_set_header      Connection          "Upgrade";
    proxy_set_header      Host                $host;
    proxy_set_header      X-Real-IP           $remote_addr;
    proxy_set_header      X-Forwarded_for     $proxy_add_x_forwarded_for;
    proxy_set_header      X-Forwarded-Proto   $scheme;
    {% endif -%}
    {% for header in item.value.proxy.header|default([]) -%}
      proxy_set_header  {{ header.field }} {{ header.value }};
    {% endfor -%}
  }
  {% endif -%}
  {% if item.value.static is defined and item.value.static.locations is defined-%}
  {% for loc in item.value.static.locations|default([]) -%}
  location {{ loc.location|default('/') }} {
    {% if loc.default_type is defined -%}
    default_type      {{ loc.default_type|default('application/json') }};
    {% endif -%}
    {% if loc.rc is defined and loc.output is defined -%}
    return            {{ loc.rc|default('200') }} {{ loc.output|default("'{}'") }};
    {% endif -%}
    {% if loc.data is defined -%}
    {{ loc.data }}
    {% endif -%}
  }
  {% endfor -%}
  {% endif -%}
}
